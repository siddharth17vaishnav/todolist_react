{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setinputText","todos","setTodos","inputText","setStatus","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","document","title","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e3eb8765.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = ({setinputText,todos,setTodos,inputText,setStatus}) => {\r\n   const inputTextHandler = (e) =>{\r\n       console.log(e.target.value);\r\n       setinputText(e.target.value);\r\n   };\r\n\r\n   const submitTodoHandler = (e) =>{\r\n       e.preventDefault();\r\n       setTodos([...todos,{text:inputText,completed:false,id:Math.random()*100}]);\r\n   setinputText(\"\");\r\n  };\r\n  \r\n  const statusHandler =(e) =>{\r\n    setStatus(e.target.value);\r\n  }\r\n    return(\r\n        <form>\r\n      <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Todo=({text,setTodos,todos,todo}) =>{\r\n    const deleteHandler = () =>{\r\n        setTodos(todos.filter(el => el.id !== todo.id));\r\n    };\r\n    const completeHandler = () =>{\r\n        setTodos(todos.map((item) => {\r\n            if(item.id === todo.id){\r\n            return {\r\n                ...item ,completed: !item.completed\r\n            }; \r\n        }\r\n            return item;\r\n    })\r\n        );\r\n    };\r\n    return(\r\n        <div className=\"todo\">\r\n        <div className={`todo-items ${todo.completed ? \"completed\":''}`}>{text}</div>\r\n        <button onClick={completeHandler} className=\"complete-btn\" >{}<i className=\"fas fa-check\"></i></button>\r\n        \r\n        <button onClick={deleteHandler} className=\"trash-btn\"><i className=\"fas fa-trash\"></i></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from \"./Todo\"\r\n\r\nconst TodoList = ({todos,setTodos,filteredTodos}) => {\r\n    console.log(todos);\r\n    return(\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {filteredTodos.map((todo) => (\r\n                    <Todo setTodos={setTodos}  todos={todos} text ={todo.text}  todo ={todo} key={todo.id}/>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import React ,{useEffect,useState} from \"react\";\nimport './App.css';\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\n\n\nfunction App (){\n  document.title=\"TodoList\";\n\n  const[inputText,setinputText]=useState(\"\");\n  const [todos,setTodos]=useState([]);\n  const [status,setStatus]=useState('all');\n  const [filteredTodos,setFilteredTodos] =useState([]);\n\n  useEffect(() =>{\n    getLocalTodos();\n  },[]);\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  },[todos,status]);\n\n  const filterHandler = () =>{\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo=>todo.completed === true));\n        break;\n        case 'uncompleted':\n        setFilteredTodos(todos.filter(todo=>todo.completed === false));\n        break;\n        default:\n          case 'completed':\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n\n  const saveLocalTodos=()=>{\n      localStorage.setItem('todos',JSON.stringify(todos));\n  };\n\n  const getLocalTodos =()=>{\n    if(localStorage.getItem('todos') === null){\n      localStorage.setItem('todos',JSON.stringify([]));\n    }\n    else{\n     let todoLocal= JSON.parse(localStorage.getItem(\"todos\"));\n    setTodos(todoLocal);\n    }\n\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n      <h1>hello</h1>\n      </header>\n      <Form \n      inputText={inputText} \n      todos={todos} \n      setTodos={setTodos} \n      setinputText ={setinputText}\n      setStatus={setStatus}\n     \n      />\n\n      <TodoList setTodos={setTodos}  \n      todos={todos}\n      filteredTodos={filteredTodos}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}